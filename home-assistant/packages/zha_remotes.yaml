# based on https://github.com/J-Lindvig/Home-Assistant-old/blob/d350d46785b41c7fc792a8f1b3ae33ca146a5b66/include/packages/lights/zha_remotes.yaml

automation:
  - alias: IKEA Remote
    id: 'ikea_remote'
    mode: queued
    max: 10
    trigger:
      - platform: event
        event_type: zha_event
    action:
      - service: script.zha_exec
        data_template:
          dim_step: 50
          color_step: 20
          light: >-
            {% set device_light_list = {
              '00:0b:57:ff:fe:f5:82:10': 'light.beam_zha_group_0x0003'
            } %}
            {{ device_light_list[trigger.event.data.device_ieee] }}
          command: "{{ trigger.event.data.command }}"
          args: "{{ trigger.event.data.args }}"

  - alias: IKEA Remote deconz
    # buttons are mapped to data.event, with the tousander digit beeing the button
    # and the last digit the press type
    # button:
    #  1 = middle
    #  2 = dim up
    #  3 = dim down
    #  4 = left
    #  5 = right
    # press type:
    #  for the ikea remote, deconz does not emit press/release but repeats press (2)
    id: 'ikea_remote_deconz'
    mode: queued
    max: 10
    trigger:
      - platform: event
        event_type: deconz_event
    action:
      - service: script.deconz_exec
        data_template:
          button: "{{ trigger.event.data.event // 1000 }}"
          press_type : "{{ trigger.event.data.event % 1000 }}"
          dim_step: 50
          color_step: 20
          light: >-
            {% set device_light_list = {
              'd0:cf:5e:ff:fe:f8:16:64': 'light.beam_zha_group_0x0003'
            } %}
            {{ device_light_list[trigger.event.data.unique_id] }}


script:
  deconz_exec:
    sequence:
      - service: system_log.write
        data_template:
          message: "deconz: {{ button }} - {{ press_type }}"
      - service_template: >-
          {%- if button in ("2", "3") %}
            script.zha_remote_short_press_dim
          {% elif button == "1" %}
            script.zha_remote_short_press_power
          {% elif button in ("4", "5") %}
            script.zha_remote_short_press_dim
          {% else %}
            unkown-button
          {% endif %}
        data_template:
          light: "{{ light }}"
          dim_step: >-
            {% if button == "3" %}
              {{ 0 - dim_step }}
            {% else %}
              {{ dim_step }}
            {% endif %}
          color_step: >-
            {% if button == "5" %}
              {{ 0 - dim_step }}
            {% else %}
              {{ dim_step }}
            {% endif %}

  zha_exec:
    sequence:
      - service: system_log.write
        data_template:
          message: "{{ command }} - {{ dim_step }}"
      - service_template: >-
          {%- if command == "toggle" %}
            script.zha_remote_short_press_power
          {% elif command == "off" %}
            script.zha_dimmer_short_press_off
          {% elif command == "move_to_level_with_on_off" or command == "on" %}
            script.zha_remote_long_press_power
          {% elif command == "press" %}
            script.zha_remote_short_press_color
          {% elif command == "hold" %}
            script.zha_remote_long_press_color
          {% elif 'step' in command %}
            script.zha_remote_short_press_dim
          {% elif 'move' in command %}
            script.zha_remote_long_press_dim
          {%- endif %}
        data_template:
          light: "{{ light }}"
          dim_step: >-
            {% if command == 'step' or command == 'move' %}
              {{ 0 - dim_step }}
            {% else %}
              {{ dim_step }}
            {% endif %}
          color_step: >-
            {% if args == '[257, 13, 0]' or args == '[3329, 0]' %}
              {{ 0 - color_step }}
            {% else %}
              {{ color_step }}
            {% endif %}

  zha_remote_short_press_power:
    sequence:
      - service: light.toggle
        data_template:
          entity_id: "{{ light }}"

  zha_remote_short_press_dim:
    sequence:
      # - service: system_log.write
      #   data_template:
      #     message: >-
      #       {% set ds = ( dim_step | int ) * 2 %}
      #       {%- if ds < 0 %}
      #         {{ [ state_attr(light, 'brightness') + ds, 1 ] | max }} - {{ light }} | {{ dim_step }}
      #       {%- else %}
      #         {{ [ state_attr(light, 'brightness') + ds, 254 ] | min }} - {{ light }} | {{ dim_step }}
      #       {%- endif %}
      - service: light.turn_on
        data_template:
          entity_id: "{{ light }}"
          brightness: >-
            {% set ds = ( dim_step | int ) * 2 %}
            {%- if ds < 0 %}
              {{ [ state_attr(light, 'brightness') + ds, 1 ] | max }}
            {%- else %}
              {{ [ state_attr(light, 'brightness') + ds, 254 ] | min }}
            {%- endif %}

  zha_remote_long_press_dim:
    sequence:
      - repeat:
          while: []
          sequence:
            - service: system_log.write
              data:
                message: "zha_remote_long_press_dim"
            - service: light.turn_on
              data_template:
                entity_id: "{{ light }}"
                brightness: >-
                  {% set ds = dim_step | int %}
                  {%- if ds < 0 %}
                    {{ [ state_attr(light, 'brightness') + ds, 1 ] | max }}
                  {%- else %}
                    {{ [ state_attr(light, 'brightness') + ds, 254 ] | min }}
                  {%- endif %}

  zha_remote_short_press_color:
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: "{{ light }}"
          color_temp: >-
            {% set cs = ( color_step | int ) * 2 %}
            {%- if cs < 0 %}
              {{ [ state_attr(light, 'color_temp') + cs, state_attr(light, 'min_mireds') ] | max }}
            {%- else %}
              {{ [ state_attr(light, 'color_temp') + cs, state_attr(light, 'max_mireds') ] | min }}
            {%- endif %}

  zha_remote_long_press_color:
    sequence:
      - repeat:
          while: []
          sequence:
            - service: light.turn_on
              data_template:
                entity_id: "{{ light }}"
                color_temp: >-
                  {% set cs = color_step | int %}
                  {%- if cs < 0 %}
                    {{ [ state_attr(light, 'color_temp') + cs, state_attr(light, 'min_mireds') ] | max }}
                  {%- else %}
                    {{ [ state_attr(light, 'color_temp') + cs, state_attr(light, 'max_mireds') ] | min }}
                  {%- endif %}

  zha_remote_long_press_power:
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: "{{ light }}"
          brightness: 254

  zha_dimmer_short_press_off:
    sequence:
      - service: light.turn_off
        data_template:
          entity_id: "{{ light }}"